from django.test.utils import setup_test_environmentsetup_test_environment()from django.test import Client# create an instance of the client for our useclient = Client()# get a response from '/'response = client.get("/")# we should expect a 404 from that address; if you instead see an# "Invalid HTTP_HOST header" error and a 400 response, you probably# omitted the setup_test_environment() call described earlier.response.status_code# on the other hand we should expect to find something at '/polls/'# we'll use 'reverse()' rather than a hardcoded URLfrom django.urls import reverseresponse = client.get(reverse("polls:index"))response.status_coderesponse.contentresponse.context["latest_question_list"]